// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String
  pets     Pet[]
}

model Pet {
  id                String            @id @default(uuid())
  pet_name          String
  description       String?
  city              String
  state             String
  phonenumber       String
  user_id           String
  user              User              @relation(fields: [user_id], references: [id])
  adoption_requests AdoptionRequest[]
  race_id           Int
  race              Race              @relation(fields: [race_id], references: [id])
  tag_id            Int
  tag               Tag               @relation(fields: [tag_id], references: [id])
}

model AdoptionRequest {
  id             String         @id @default(uuid())
  data           DateTime       @default(now())
  pet_id         String
  pet            Pet            @relation(fields: [pet_id], references: [id])
  adoption_id    Int
  adoptionStatus AdoptionStatus @relation(fields: [adoption_id], references: [id])
}

model Race {
  id   Int    @id @default(autoincrement())
  race String
  pets Pet[]
}

model Tag {
  id     Int    @id @default(autoincrement())
  status String
  pets   Pet[]
}

model AdoptionStatus {
  id               Int               @id @default(autoincrement())
  adoption_status  String
  adoptionRequests AdoptionRequest[]
}
